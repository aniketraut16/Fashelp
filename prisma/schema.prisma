generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model brands {
  id                 String               @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name               String               @db.VarChar(255)
  domain             String               @unique @db.VarChar(255)
  is_partner         Boolean?             @default(false)
  tier               brand_tier?          @default(standard)
  created_at         DateTime?            @default(now()) @db.Timestamp(6)
  product_embeddings product_embeddings[]
}

model chat_messages {
  id               String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  session_id       String        @db.Uuid
  user_id          String?       @db.VarChar(255)
  message          String
  message_type     message_type
  response_text    String?
  detected_intent  String?       @db.VarChar(100)
  confidence_score Decimal?      @db.Decimal(4, 3)
  created_at       DateTime?     @default(now()) @db.Timestamp(6)
  chat_sessions    chat_sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users            users?        @relation(fields: [user_id], references: [id], onUpdate: NoAction)
}

model chat_sessions {
  id             String          @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id        String?         @db.VarChar(255)
  session_key    String          @unique @db.VarChar(255)
  current_url    String?
  current_domain String?         @db.VarChar(255)
  page_context   Json?           @default("{}")
  is_active      Boolean?        @default(true)
  created_at     DateTime?       @default(now()) @db.Timestamp(6)
  last_activity  DateTime?       @default(now()) @db.Timestamp(6)
  chat_messages  chat_messages[]
  users          users?          @relation(fields: [user_id], references: [id], onUpdate: NoAction)
}

model product_embeddings {
  id          String                 @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  brand_id    String                 @db.Uuid
  product_url String
  embedding   Unsupported("vector")?
  created_at  DateTime?              @default(now()) @db.Timestamp(6)
  brands      brands                 @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user_preferences {
  id              String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id         String    @db.VarChar(255)
  preference_text String
  created_at      DateTime? @default(now()) @db.Timestamp(6)
  updated_at      DateTime? @default(now()) @db.Timestamp(6)
  users           users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  id               String             @id @db.VarChar(255)
  email            String             @unique @db.VarChar(255)
  first_name       String?            @db.VarChar(100)
  last_name        String?            @db.VarChar(100)
  is_active        Boolean?           @default(true)
  created_at       DateTime?          @default(now()) @db.Timestamp(6)
  updated_at       DateTime?          @default(now()) @db.Timestamp(6)
  chat_messages    chat_messages[]
  chat_sessions    chat_sessions[]
  user_preferences user_preferences[]
}

enum brand_tier {
  premium
  standard
}

enum message_type {
  user
  assistant
  system
}
